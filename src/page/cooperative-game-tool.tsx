import React, { useEffect, useState, useCallback } from 'react';
import ReactDOM from 'react-dom/client';

import { CgtLib } from '../wasm/cgt';
// @ts-ignore
import cgt_module from '../wasm/cgt_module';

function App() {
    const [csv, setCsv] = useState<string>(`coalition;payoff
1;2
2;5
3;4
1,2;14
1,3;18
2,3;9
1,2,3;24`);
    const [solution, setSolution] = useState<{ player: number; nucleolus: number }[]>();
    const [cgtLib, setCgtLib] = useState<CgtLib>();

    const solveProblem = useCallback(() => {
        if (cgtLib) {
            const v: number[] = [
                0, 0, 47, 0, 182, 32, 242, 0, 168, 51, 42, 139, 173, 130, 321, 0, 112, 75, 86, 192, 51, 273, 202, 36,
                295, 54, 370, 124, 10, 234, 248, 0, 192, 150, 254, 112, 155, 228, 100, 199, 71, 111, 291, 108, 94, 184,
                49, 89, 54, 54, 153, 131, 100, 121, 415, 222, 82, 355, 301, 240, 214, 486, 201, 0, 96, 154, 70, 93, 167,
                202, 250, 181, 82, 231, 370, 99, 153, 289, 308, 11, 43, 66, 3, 166, 190, 384, 287, 221, 177, 237, 483,
                222, 417, 415, 139, 18, 24, 99, 354, 187, 352, 37, 110, 231, 295, 204, 362, 349, 45, 61, 357, 116, 282,
                278, 315, 263, 410, 225, 5, 288, 39, 178, 12, 248, 458, 541, 194, 0, 45, 144, 51, 28, 80, 194, 332, 23,
                101, 118, 282, 38, 317, 276, 332, 196, 128, 242, 345, 286, 79, 67, 181, 182, 152, 290, 112, 141, 335,
                454, 86, 123, 119, 148, 99, 257, 105, 253, 472, 224, 180, 8, 389, 315, 238, 299, 4, 108, 150, 101, 18,
                115, 247, 334, 197, 80, 256, 160, 310, 208, 600, 417, 592, 189, 212, 105, 57, 173, 354, 113, 391, 132,
                264, 196, 117, 317, 341, 93, 295, 235, 327, 185, 19, 172, 51, 310, 434, 109, 149, 420, 382, 319, 279,
                427, 153, 274, 239, 326, 446, 348, 174, 23, 506, 20, 92, 494, 186, 367, 374, 166, 340, 163, 179, 61,
                563, 27, 334, 324, 98, 406, 458, 591, 299, 351, 335, 657, 644, 0, 144, 156, 272, 18, 253, 6, 222, 186,
                116, 108, 395, 153, 295, 76, 55, 118, 73, 297, 278, 102, 121, 196, 162, 15, 391, 380, 332, 29, 284, 353,
                375, 21, 20, 93, 209, 154, 234, 10, 282, 110, 400, 366, 198, 168, 363, 447, 58, 63, 261, 81, 27, 84,
                434, 399, 278, 55, 268, 322, 319, 412, 34, 444, 139, 55, 10, 119, 255, 104, 333, 240, 468, 41, 204, 355,
                484, 53, 208, 176, 334, 122, 111, 204, 444, 256, 177, 288, 483, 308, 296, 297, 37, 180, 552, 441, 375,
                172, 206, 181, 434, 314, 203, 475, 139, 161, 347, 214, 243, 258, 334, 375, 336, 223, 27, 250, 45, 401,
                4, 38, 418, 413, 325, 325, 216, 569, 196, 235, 166, 139, 223, 293, 116, 98, 228, 349, 215, 133, 102,
                212, 113, 33, 113, 347, 582, 246, 364, 6, 191, 396, 201, 110, 118, 222, 217, 33, 499, 279, 24, 243, 329,
                76, 27, 383, 119, 202, 395, 187, 212, 164, 429, 500, 105, 428, 457, 585, 347, 251, 300, 133, 517, 54,
                125, 227, 11, 302, 125, 158, 103, 474, 97, 569, 466, 120, 4, 284, 235, 168, 134, 104, 243, 316, 472,
                300, 416, 493, 345, 408, 204, 214, 497, 202, 108, 351, 268, 231, 490, 239, 488, 275, 262, 154, 415, 176,
                752, 53, 27, 436, 234, 142, 535, 141, 511, 32, 431, 572, 245, 139, 594, 389, 551, 428, 103, 190, 22, 63,
                629, 326, 174, 300, 632, 565, 351, 80, 245, 85, 580, 0, 76, 156, 150, 34, 231, 99, 161, 117, 236, 189,
                189, 176, 246, 192, 64, 118, 131, 124, 249, 102, 167, 174, 38, 11, 33, 167, 355, 58, 182, 293, 307, 144,
                169, 134, 51, 230, 111, 226, 53, 156, 300, 119, 227, 370, 193, 227, 120, 61, 316, 247, 2, 161, 469, 437,
                248, 309, 470, 227, 406, 116, 321, 365, 43, 163, 165, 62, 266, 163, 122, 156, 460, 284, 149, 114, 37,
                362, 58, 91, 269, 131, 288, 47, 81, 297, 342, 127, 98, 173, 92, 426, 126, 200, 526, 106, 252, 221, 110,
                61, 464, 380, 36, 360, 387, 185, 485, 47, 12, 204, 484, 115, 653, 72, 265, 453, 360, 213, 391, 484, 52,
                302, 25, 304, 590, 466, 119, 664, 751, 159, 266, 97, 321, 145, 357, 383, 26, 140, 329, 153, 15, 56, 280,
                464, 229, 260, 121, 313, 352, 397, 155, 356, 466, 220, 482, 51, 454, 483, 462, 422, 312, 216, 311, 167,
                356, 398, 257, 242, 560, 256, 17, 15, 23, 291, 20, 506, 552, 395, 38, 363, 312, 77, 401, 122, 383, 352,
                491, 45, 43, 594, 10, 502, 334, 224, 139, 78, 457, 160, 204, 183, 330, 201, 34, 268, 348, 460, 541, 281,
                663, 142, 154, 122, 66, 62, 435, 504, 7, 313, 561, 384, 25, 387, 318, 426, 437, 144, 56, 464, 325, 358,
                235, 494, 635, 240, 314, 205, 9, 124, 219, 329, 97, 261, 252, 32, 518, 504, 656, 120, 99, 347, 582, 282,
                276, 467, 344, 487, 135, 167, 292, 175, 332, 68, 48, 265, 96, 164, 307, 134, 202, 289, 258, 330, 544,
                134, 227, 355, 309, 297, 464, 331, 411, 59, 364, 244, 374, 476, 107, 81, 161, 73, 50, 48, 89, 343, 476,
                290, 260, 93, 43, 87, 365, 409, 527, 363, 584, 379, 33, 4, 190, 487, 91, 328, 14, 152, 394, 125, 346,
                341, 559, 76, 78, 210, 254, 207, 485, 346, 288, 430, 164, 76, 104, 444, 571, 380, 28, 13, 390, 171, 497,
                110, 251, 193, 337, 513, 77, 54, 511, 471, 386, 495, 488, 507, 700, 151, 308, 96, 80, 189, 410, 353,
                468, 488, 53, 344, 39, 240, 331, 636, 358, 247, 199, 399, 257, 480, 230, 484, 487, 522, 605, 40, 498,
                220, 242, 580, 171, 263, 300, 378, 9, 57, 408, 359, 91, 301, 433, 140, 558, 179, 402, 320, 575, 6, 435,
                274, 46, 223, 534, 47, 325, 307, 475, 385, 528, 7, 573, 269, 688, 311, 266, 270, 580, 217, 276, 456,
                106, 380, 242, 444, 595, 161, 7, 260, 18, 108, 413, 194, 330, 378, 409, 640, 462, 521, 577, 606, 357,
                61, 461, 487, 575, 18, 258, 341, 442, 277, 44, 283, 648, 420, 155, 316, 420, 524, 277, 654, 386, 209,
                329, 440, 397, 77, 551, 239, 91, 409, 342, 27, 515, 92, 22, 550, 243, 36, 544, 581, 55, 494, 103, 253,
                6, 441, 596, 572, 313, 126, 376, 600, 272, 526, 224, 312, 106, 197, 84, 562, 632, 637, 788, 787, 134,
                298, 637, 673, 946,
            ];
            const n_in = 10;
            const v_in = new cgtLib.DoubleVector();
            v.map((x) => v_in.push_back(x));
            const result = cgtLib.nucleolus(v_in, n_in);
            for (let i = 0; i < result.size(); i++) {
                console.log(`Result of ${i + 1}: ${result.get(i)}`);
            }
            const newSolution: { player: number; nucleolus: number }[] = [];
            for (let i = 0; i < result.size(); i++) {
                newSolution.push({ player: i + 1, nucleolus: result.get(i) });
            }
            setSolution(newSolution);
        }
    }, [cgtLib]);

    useEffect(() => {
        cgt_module().then((cgtLib: CgtLib) => setCgtLib(cgtLib));
    }, [setCgtLib]);

    return (
        <div className="d-flex flex-column justify-content-start p-3">
            <div className="p-2">
                <textarea
                    className="w-100 m-auto"
                    onChange={(event) => {
                        setCsv(event.target.value);
                    }}
                    rows={9}
                    defaultValue={csv}
                ></textarea>
            </div>
            <div className="d-flex flex-row justify-content-center w-100">
                <div className="d-flex flex-row justify-content-center p-2">
                    <button type="button" className="btn btn-primary" onClick={solveProblem}>
                        Solve
                    </button>
                </div>
            </div>
            <div className="d-flex flex-column justify-content-start p-2">
                {solution &&
                    solution.map((elem) => (
                        <div key={elem.player} className="d-flex flex-row justify-content-center p-2">
                            <div>Player: {elem.player}</div>
                            <div>Nucleolus: {elem.nucleolus}</div>
                            <br />
                        </div>
                    ))}
            </div>
        </div>
    );
}

const root = ReactDOM.createRoot(document.getElementById('app-root') as HTMLElement);
root.render(
    <React.StrictMode>
        <App />
    </React.StrictMode>
);
